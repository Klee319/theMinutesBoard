name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false
    
    - name: Build project
      run: npm run build
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ matrix.node-version }}
        path: |
          build/
          dist/
        retention-days: 7

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run TypeScript check
      run: npm run lint
    
    - name: Check code formatting
      run: npx prettier --check "src/**/*.{ts,tsx,js,jsx}"
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
    
    - name: Check for unused dependencies
      run: npx depcheck --ignores="@types/*,@vitest/*,vitest"

  build-extension:
    runs-on: ubuntu-latest
    needs: [test, code-quality]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build extension
      run: npm run build
    
    - name: Create extension package
      run: |
        cd build
        zip -r ../theMinutesBoard-extension.zip .
    
    - name: Upload extension package
      uses: actions/upload-artifact@v4
      with:
        name: chrome-extension
        path: theMinutesBoard-extension.zip
        retention-days: 30

  release:
    runs-on: ubuntu-latest
    needs: [build-extension]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download extension package
      uses: actions/download-artifact@v4
      with:
        name: chrome-extension
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Chrome extension build for ${{ github.ref }}
          
          ## Changes
          - See commit history for detailed changes
          
          ## Installation
          1. Download the extension package
          2. Extract the ZIP file
          3. Load unpacked extension in Chrome
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./theMinutesBoard-extension.zip
        asset_name: theMinutesBoard-extension.zip
        asset_content_type: application/zip